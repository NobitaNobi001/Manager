<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.AdminMapper">
    <resultMap id="BaseResultMap" type="com.bean.Admin">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="admin_number" jdbcType="INTEGER" property="adminNumber"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="admin_name" jdbcType="VARCHAR" property="adminName"/>
        <result column="college_id" jdbcType="INTEGER" property="collegeId"/>
        <result column="gender" jdbcType="CHAR" property="gender"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="is_super" jdbcType="CHAR" property="isSuper"/>
    </resultMap>
    <resultMap id="AdminWithCollege" type="com.bean.Admin">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="admin_number" jdbcType="INTEGER" property="adminNumber"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="admin_name" jdbcType="VARCHAR" property="adminName"/>
        <result column="college_id" jdbcType="INTEGER" property="collegeId"/>
        <result column="gender" jdbcType="CHAR" property="gender"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="is_super" jdbcType="CHAR" property="isSuper"/>
        <!--指定联合查询出的学院字段的封装-->
        <association javaType="com.bean.College" property="college">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, admin_number, password, admin_name, college_id, gender, phone, email, is_super
  </sql>
    <sql id="WithCollege_Column_List">
    a.id, admin_number, password, admin_name, a.college_id, gender,  phone, email,is_super,c.id,c.name
</sql>
    <select id="selectByExample" parameterType="com.bean.AdminExample" resultMap="AdminWithCollege">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="WithCollege_Column_List"/>
        from admin_info a left join college c on a.`college_id`=c.`id`
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from admin_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from admin_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.bean.AdminExample">
        delete from admin_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.bean.Admin">
    insert into admin_info (id, admin_number, password,
      admin_name, college_id, gender,
      phone, email, is_super)
    values (#{id,jdbcType=INTEGER}, #{adminNumber,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR},
      #{adminName,jdbcType=VARCHAR}, #{collegeId,jdbcType=INTEGER}, #{gender,jdbcType=CHAR},
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{isSuper,jdbcType=CHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.bean.Admin">
        insert into admin_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="adminNumber != null">
                admin_number,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="adminName != null">
                admin_name,
            </if>
            <if test="collegeId != null">
                college_id,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="isSuper != null">
                is_super,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="adminNumber != null">
                #{adminNumber,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="adminName != null">
                #{adminName,jdbcType=VARCHAR},
            </if>
            <if test="collegeId != null">
                #{collegeId,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="isSuper != null">
                #{isSuper,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bean.AdminExample" resultType="java.lang.Integer">
        select count(*) from admin_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update admin_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.adminNumber != null">
                admin_number = #{record.adminNumber,jdbcType=INTEGER},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.adminName != null">
                admin_name = #{record.adminName,jdbcType=VARCHAR},
            </if>
            <if test="record.collegeId != null">
                college_id = #{record.collegeId,jdbcType=INTEGER},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=CHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.isSuper != null">
                is_super = #{record.isSuper,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update admin_info
        set id = #{record.id,jdbcType=INTEGER},
        admin_number = #{record.adminNumber,jdbcType=INTEGER},
        password = #{record.password,jdbcType=VARCHAR},
        admin_name = #{record.adminName,jdbcType=VARCHAR},
        college_id = #{record.collegeId,jdbcType=INTEGER},
        gender = #{record.gender,jdbcType=CHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        is_super = #{record.isSuper,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bean.Admin">
        update admin_info
        <set>
            <if test="adminNumber != null">
                admin_number = #{adminNumber,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="adminName != null">
                admin_name = #{adminName,jdbcType=VARCHAR},
            </if>
            <if test="collegeId != null">
                college_id = #{collegeId,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="isSuper != null">
                is_super = #{isSuper,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bean.Admin">
    update admin_info
    set admin_number = #{adminNumber,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      admin_name = #{adminName,jdbcType=VARCHAR},
      college_id = #{collegeId,jdbcType=INTEGER},
      gender = #{gender,jdbcType=CHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      is_super = #{isSuper,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--根据管理员账号查询信息-->
    <select id="selectAdminByAdminNumber" parameterType="java.lang.Integer" resultMap="AdminWithCollege">
        select
        <include refid="WithCollege_Column_List"/>
        from admin_info a
        left join college c on a.`college_id`=c.`id`
        where admin_number= #{admin_number,jdbcType=INTEGER}
    </select>


    <select id="selectEmailByAdmin" resultType="java.lang.Integer">
        select count(*) from admin_info
        where email = #{email} and admin_number = #{number}
    </select>

    <update id="updatePasswordByAdminNumber">
        update admin_info
        set password = #{password,jdbcType=VARCHAR}
        where admin_number = #{number,jdbcType=INTEGER}
    </update>

    <insert id="insertBatchAdminByExcel" parameterType="java.util.List">
        insert into admin_info
        (
        admin_number,
        admin_name,
        password,
        college_id,
        gender,
        is_super,
        phone,
        email

        )
        values
        <foreach collection="list" item="admin" separator=",">
            #{admin.adminNumber},
            #{admin.adminName},
            #{admin.password},
            #{admin.collegeId},
            #{admin.gender},
            #{admin.isSuper},
            #{admin.phone},
            #{admin.email}
        </foreach>
    </insert>
</mapper>