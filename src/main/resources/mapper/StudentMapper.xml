<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.StudentMapper">
    <cache eviction="FIFO" flushInterval="600000" readOnly="true" size="1024"></cache>
    <resultMap id="WithCreditResultMap" type="com.bean.Student">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="stu_number" property="stuNumber" jdbcType="INTEGER"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="stu_name" property="stuName" jdbcType="VARCHAR"/>
        <result column="college_id" property="collegeId" jdbcType="INTEGER"/>
        <result column="major" property="major" jdbcType="VARCHAR"/>
        <result column="class_name" property="className" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="name" property="college.name" jdbcType="VARCHAR"></result>
        <result column="sum_credit" property="sumCredit" jdbcType="DOUBLE"></result>
    </resultMap>
    <resultMap id="UserNameAndPassword" type="com.bean.Student">
        <result column="password" property="password" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="BaseResultMap" type="com.bean.Student">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="stu_number" jdbcType="INTEGER" property="stuNumber"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="stu_name" jdbcType="VARCHAR" property="stuName"/>
        <result column="college_id" jdbcType="INTEGER" property="collegeId"/>
        <result column="major" jdbcType="VARCHAR" property="major"/>
        <result column="class_name" jdbcType="VARCHAR" property="className"/>
        <result column="gender" jdbcType="CHAR" property="gender"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, stu_number, password, stu_name, college_id, major, class_name, gender, phone,
    email
  </sql>
    <sql id="WithSumcredit_Column_List">
        s.id,s.stu_number,s.password,s.stu_name,s.college_id,s.major,s.class_name,s.gender,s.phone,s.email,
        c1.name,c2.sum_credit
    </sql>

    <!--根据学号查找学生的信息-->
    <select id="selectStudentByStuNumber" resultMap="WithCreditResultMap" parameterType="java.lang.Integer">
        select
        <include refid="WithSumcredit_Column_List"/>
        FROM stu_info s
        LEFT JOIN college c1
        on s.college_id=c1.id
        join credit c2
        on s.stu_number=c2.stu_number
        where s.stu_number=#{stu_number,jdbcType=INTEGER}
    </select>

    <!--根据学号得到密码-->
    <select id="selectUPByStuNumber" resultMap="UserNameAndPassword" parameterType="java.lang.Integer">
        select password from stu_info where stu_number=#{stu_number}
    </select>

    <!--完善学生信息-->
    <update id="updateStuInfoById">
        update stu_info
        <set>
            <if test="gender!=null">
                gender=#{gender},
            </if>
            <if test="phone!=null">
                phone=#{phone},
            </if>
            <if test="email!=null">
                email=#{email},
            </if>
        </set>
        <where>
            id=#{id}
        </where>
    </update>

    <!--根据学号修改密码-->
    <update id="updateStuPwdByStuNumber">
        update stu_info set password=#{password} where stu_number=#{stuNumber}
    </update>

    <!--根据学生的学号去查询所在的major-->
    <select id="selectMajorBystuNumber" resultType="java.lang.String">
    select major from stu_info where stu_number=#{stuNumber}
   </select>

    <!--根据关键字查询学生信息 比如学号 学生姓名-->
    <select id="selectStuBykeyword" resultMap="WithCreditResultMap">
        select
        <include refid="Base_Column_List"/>
        from stu_info
        <where>
            <if test="keyword!=null and keyword!=''">
                stu_number like concat ("%",#{keyword},"%") or
                stu_name like concat ("%",#{keyword},"%")
            </if>
        </where>
    </select>

    <!--下面是逆向工程-->
    <select id="selectByExample" parameterType="com.bean.StudentExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from stu_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from stu_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stu_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.bean.StudentExample">
        delete from stu_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.bean.Student">
    insert into stu_info (id, stu_number, password,
      stu_name, college_id, major,
      class_name, gender, phone,
      email)
    values (#{id,jdbcType=INTEGER}, #{stuNumber,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR},
      #{stuName,jdbcType=VARCHAR}, #{collegeId,jdbcType=INTEGER}, #{major,jdbcType=VARCHAR},
      #{className,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{phone,jdbcType=VARCHAR},
      #{email,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.bean.Student">
        insert into stu_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="stuNumber != null">
                stu_number,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="stuName != null">
                stu_name,
            </if>
            <if test="collegeId != null">
                college_id,
            </if>
            <if test="major != null">
                major,
            </if>
            <if test="className != null">
                class_name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="stuNumber != null">
                #{stuNumber,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="stuName != null">
                #{stuName,jdbcType=VARCHAR},
            </if>
            <if test="collegeId != null">
                #{collegeId,jdbcType=INTEGER},
            </if>
            <if test="major != null">
                #{major,jdbcType=VARCHAR},
            </if>
            <if test="className != null">
                #{className,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <insert id="insertBatchStuByExcel" parameterType="java.util.List">
        insert into stu_info
        (
        stu_number,
        password,
        stu_name,
        college_id,
        major,
        class_name
        )
        values
        <foreach collection="list" item="student" index="index" separator=",">
            (
            #{student.stuNumber},
            #{student.password},
            #{student.stuName},
            #{student.collegeId},
            #{student.major},
            #{student.className}
            )
        </foreach>
    </insert>

    <select id="countByExample" parameterType="com.bean.StudentExample" resultType="java.lang.Long">
        select count(*) from stu_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update stu_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.stuNumber != null">
                stu_number = #{record.stuNumber,jdbcType=INTEGER},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.stuName != null">
                stu_name = #{record.stuName,jdbcType=VARCHAR},
            </if>
            <if test="record.collegeId != null">
                college_id = #{record.collegeId,jdbcType=INTEGER},
            </if>
            <if test="record.major != null">
                major = #{record.major,jdbcType=VARCHAR},
            </if>
            <if test="record.className != null">
                class_name = #{record.className,jdbcType=VARCHAR},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=CHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update stu_info
        set id = #{record.id,jdbcType=INTEGER},
        stu_number = #{record.stuNumber,jdbcType=INTEGER},
        password = #{record.password,jdbcType=VARCHAR},
        stu_name = #{record.stuName,jdbcType=VARCHAR},
        college_id = #{record.collegeId,jdbcType=INTEGER},
        major = #{record.major,jdbcType=VARCHAR},
        class_name = #{record.className,jdbcType=VARCHAR},
        gender = #{record.gender,jdbcType=CHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.bean.Student">
        update stu_info
        <set>
            <if test="stuNumber != null">
                stu_number = #{stuNumber,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="stuName != null">
                stu_name = #{stuName,jdbcType=VARCHAR},
            </if>
            <if test="collegeId != null">
                college_id = #{collegeId,jdbcType=INTEGER},
            </if>
            <if test="major != null">
                major = #{major,jdbcType=VARCHAR},
            </if>
            <if test="className != null">
                class_name = #{className,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bean.Student">
    update stu_info
    set stu_number = #{stuNumber,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      stu_name = #{stuName,jdbcType=VARCHAR},
      college_id = #{collegeId,jdbcType=INTEGER},
      major = #{major,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectEmailByStudent" resultType="java.lang.Integer">
        select count(*) from stu_info
        where email = #{email} and stu_number = #{number}
    </select>

    <update id="updatePasswordByStudentNumber">
        update stu_info
        set password = #{password,jdbcType=VARCHAR}
        where stu_number = #{number,jdbcType=INTEGER}
    </update>
</mapper>
