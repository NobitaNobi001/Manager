<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.StudentMapper">
    <cache eviction="FIFO" flushInterval="6000" readOnly="false" size="1024"></cache>
    <resultMap id="BaseResultMap" type="com.bean.Student">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="stu_number" property="stuNumber" jdbcType="INTEGER"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="institute" property="institute" jdbcType="VARCHAR"/>
        <result column="major" property="major" jdbcType="VARCHAR"/>
        <result column="class_name" property="className" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="UserNameAndPassword" type="com.bean.Student">
        <result column="stu_number" property="stuNumber" jdbcType="INTEGER"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, stu_number, password, name, institute, major, class_name, gender, phone, email
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bean.StudentExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from stu_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <!--根据学号查找学生的用户名和密码信息-->
    <select id="selectUPByStuNumber" resultMap="UserNameAndPassword" parameterType="java.lang.Integer">
    select stu_number,password from stu_info where stu_number = #{stu_number,jdbcType=INTEGER}
  </select>

    <!--根据学号查找学生的信息-->
    <select id="selectStudentByStuNumber" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from stu_info where stu_number= #{stu_number,jdbcType=INTEGER}
    </select>
    <!--根据主键来查询学生-->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from stu_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from stu_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.bean.StudentExample">
        delete from stu_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.bean.Student">
    insert into stu_info (id, stu_number, password, 
      name, institute, major, 
      class_name, gender, phone, 
      email)
    values (#{id,jdbcType=INTEGER}, #{stuNumber,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{institute,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{className,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.bean.Student">
        insert into stu_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="stuNumber != null">
                stu_number,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="institute != null">
                institute,
            </if>
            <if test="major != null">
                major,
            </if>
            <if test="className != null">
                class_name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="stuNumber != null">
                #{stuNumber,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="institute != null">
                #{institute,jdbcType=VARCHAR},
            </if>
            <if test="major != null">
                #{major,jdbcType=VARCHAR},
            </if>
            <if test="className != null">
                #{className,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bean.StudentExample" resultType="java.lang.Integer">
        select count(*) from stu_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update stu_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.stuNumber != null">
                stu_number = #{record.stuNumber,jdbcType=INTEGER},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.institute != null">
                institute = #{record.institute,jdbcType=VARCHAR},
            </if>
            <if test="record.major != null">
                major = #{record.major,jdbcType=VARCHAR},
            </if>
            <if test="record.className != null">
                class_name = #{record.className,jdbcType=VARCHAR},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=CHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update stu_info
        set id = #{record.id,jdbcType=INTEGER},
        stu_number = #{record.stuNumber,jdbcType=INTEGER},
        password = #{record.password,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        institute = #{record.institute,jdbcType=VARCHAR},
        major = #{record.major,jdbcType=VARCHAR},
        class_name = #{record.className,jdbcType=VARCHAR},
        gender = #{record.gender,jdbcType=CHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bean.Student">
        update stu_info
        <set>
            <if test="stuNumber != null">
                stu_number = #{stuNumber,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="institute != null">
                institute = #{institute,jdbcType=VARCHAR},
            </if>
            <if test="major != null">
                major = #{major,jdbcType=VARCHAR},
            </if>
            <if test="className != null">
                class_name = #{className,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bean.Student">
    update stu_info
    set stu_number = #{stuNumber,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      institute = #{institute,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      class_name = #{className,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updataStuByNullInfo">
        update stu_info
        <set>
            <if test="gender!=null">
                gender=#{gender},
            </if>
            <if test="phone!=null">
                phone=#{phone},
            </if>
            <if test="email!=null">
                email=#{email},
            </if>
        </set>
        <where>
            id=#{id}
        </where>
    </update>

    <update id="updateStuPwdByStuNumber">
        update stu_info set password=#{password} where stu_number=#{stuNumber}
    </update>
</mapper>