<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.TeacherMapper">
    <resultMap id="BaseResultMap" type="com.bean.Teacher">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="tea_number" jdbcType="INTEGER" property="teaNumber"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="tea_name" jdbcType="VARCHAR" property="teaName"/>
        <result column="college_id" jdbcType="INTEGER" property="collegeId"/>
        <result column="gender" jdbcType="CHAR" property="gender"/>
        <result column="tea_positon" jdbcType="VARCHAR" property="teaPositon"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="audit_grade" jdbcType="VARCHAR" property="auditGrade"/>
    </resultMap>
    <resultMap id="teacherWithCollege" type="com.bean.Teacher">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="tea_number" jdbcType="INTEGER" property="teaNumber"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="tea_name" jdbcType="VARCHAR" property="teaName"/>
        <result column="college_id" jdbcType="INTEGER" property="collegeId"/>
        <result column="gender" jdbcType="CHAR" property="gender"/>
        <result column="tea_positon" jdbcType="VARCHAR" property="teaPositon"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="audit_grade" jdbcType="VARCHAR" property="auditGrade"/>
        <!--指定联合查询出的学院字段的封装-->
        <association javaType="com.bean.College" property="college">
            <id column="id" jdbcType="INTEGER" property="id"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
            <result column="rule" jdbcType="VARCHAR" property="rule"/>
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, tea_number, password, tea_name, college_id, gender, tea_positon, phone, email, 
    audit_grade
  </sql>
    <sql id="WithCollege_Column_List">
    t.id, tea_number, password, tea_name, t.college_id, gender, tea_positon, phone, email,audit_grade,c.id,c.name,c.rule
  </sql>

    <!--将所有的教师进行查出-->
    <select id="selectByExample" parameterType="com.bean.TeacherExample" resultMap="teacherWithCollege">
        select
        <if test="distinct">distinct</if>

        <include refid="WithCollege_Column_List"/>
        from tea_info t left join college c on t.`college_id`=c.`id`
        <if test="_parameter != null">

            <include refid="Example_Where_Clause"/>

        </if>

        <if test="orderByClause != null">order by ${orderByClause}</if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tea_info
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectTeachersWithCollegeId" parameterType="java.lang.Integer" resultType="com.bean.Teacher">
        select * from tea_info where college_id = #{collegeId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tea_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.bean.TeacherExample">
        delete from tea_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.bean.Teacher">
    insert into tea_info (id, tea_number, password, 
      tea_name, college_id, gender, 
      tea_positon, phone, email, 
      audit_grade)
    values (#{id,jdbcType=INTEGER}, #{teaNumber,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, 
      #{teaName,jdbcType=VARCHAR}, #{collegeId,jdbcType=INTEGER}, #{gender,jdbcType=CHAR}, 
      #{teaPositon,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{auditGrade,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.bean.Teacher">
        insert into tea_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="teaNumber != null">
                tea_number,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="teaName != null">
                tea_name,
            </if>
            <if test="collegeId != null">
                college_id,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="teaPositon != null">
                tea_positon,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="auditGrade != null">
                audit_grade,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="teaNumber != null">
                #{teaNumber,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="teaName != null">
                #{teaName,jdbcType=VARCHAR},
            </if>
            <if test="collegeId != null">
                #{collegeId,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="teaPositon != null">
                #{teaPositon,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="auditGrade != null">
                #{auditGrade,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.bean.TeacherExample" resultType="java.lang.Integer">
        select count(*) from tea_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tea_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.teaNumber != null">
                tea_number = #{record.teaNumber,jdbcType=INTEGER},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.teaName != null">
                tea_name = #{record.teaName,jdbcType=VARCHAR},
            </if>
            <if test="record.collegeId != null">
                college_id = #{record.collegeId,jdbcType=INTEGER},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=CHAR},
            </if>
            <if test="record.teaPositon != null">
                tea_positon = #{record.teaPositon,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.auditGrade != null">
                audit_grade = #{record.auditGrade,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tea_info
        set id = #{record.id,jdbcType=INTEGER},
        tea_number = #{record.teaNumber,jdbcType=INTEGER},
        password = #{record.password,jdbcType=VARCHAR},
        tea_name = #{record.teaName,jdbcType=VARCHAR},
        college_id = #{record.collegeId,jdbcType=INTEGER},
        gender = #{record.gender,jdbcType=CHAR},
        tea_positon = #{record.teaPositon,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        audit_grade = #{record.auditGrade,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.bean.Teacher">
        update tea_info
        <set>
            <if test="teaNumber != null">
                tea_number = #{teaNumber,jdbcType=INTEGER},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="teaName != null">
                tea_name = #{teaName,jdbcType=VARCHAR},
            </if>
            <if test="collegeId != null">
                college_id = #{collegeId,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="teaPositon != null">
                tea_positon = #{teaPositon,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="auditGrade != null">
                audit_grade = #{auditGrade,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bean.Teacher">
    update tea_info
    set tea_number = #{teaNumber,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      tea_name = #{teaName,jdbcType=VARCHAR},
      college_id = #{collegeId,jdbcType=INTEGER},
      gender = #{gender,jdbcType=CHAR},
      tea_positon = #{teaPositon,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      audit_grade = #{auditGrade,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <!--根据教工账号查找教工的信息-->
    <select id="selectTeacherByTeaNumber" parameterType="java.lang.Integer" resultMap="teacherWithCollege">
        select
        <include refid="WithCollege_Column_List"/>
        from tea_info t
        left join college c on t.`college_id`=c.`id`
        where tea_number= #{tea_number,jdbcType=INTEGER}
    </select>

    <!--条件查询-->
    <select id="selectTeacherWithCondition" resultMap="teacherWithCollege">
        select
        <include refid="WithCollege_Column_List"/>
        from tea_info t
        left join college c on t.`college_id`=c.`id`
        <where>
            <if test="collegeId != -1">
                and t.`college_id` = #{collegeId}
            </if>
            <if test="keywords != null">
                and tea_name like concat('%',#{keywords},'%')
            </if>
        </where>
    </select>

    <select id="selectEmailByTeacher" resultType="java.lang.Integer">
        select count(*) from tea_info
        where email = #{email} and tea_number = #{number}
    </select>

    <update id="updatePasswordByTeacherNumber">
        update tea_info
        set password = #{password,jdbcType=VARCHAR}
        where tea_number = #{number,jdbcType=INTEGER}
    </update>

    <update id="updateAuditGradeByPrimaryKey">
        update tea_info set audit_grade = #{auditGrade,jdbcType=VARCHAR} where id = #{id,jdbcType=INTEGER};
    </update>

    <insert id="insertBatchTeacherByExcel" parameterType="java.util.List">

        insert into tea_info
        (
        tea_number,
        tea_name,
        password,
        college_id,
        tea_positon,
        gender,
        phone,
        email
        )
        values
        <foreach collection="list" item="teacher" separator=",">
            (
            #{teacher.teaNumber},
            #{teacher.teaName},
            #{teacher.password},
            #{teacher.collegeId},
            #{teacher.teaPositon},
            #{teacher.gender},
            #{teacher.phone},
            #{teacher.email}
            )
        </foreach>

    </insert>

</mapper>